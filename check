#!/usr/bin/env bash
set -e
set -u
set -o pipefail

# Ensure 'git' and 'python3' are available
command -v git >/dev/null 2>&1 || { echo >&2 "error: could not run 'git'"; exit 1; }
command -v python3 >/dev/null 2>&1 || { echo >&2 "error: could not run 'python3'"; exit 1; }

# check that we are in the correct directory
for dir in test test/tests ; do
    if [[ ! -d "$dir" ]]; then
        echo >&2 "error: no directory '$dir'"
        echo >&2 "'check' should be called in the toplevel git-raw source directory"
        exit 1
    fi
done

if [[ ! -x git-raw ]]; then
    echo >&2 "'check' should be called in the toplevel git-raw source directory"
    exit 1
fi

# create a directory for test logs
logdir="$(pwd)/test/logs"
mkdir -p "$logdir"

# get a temp directory to do all the tests in and clean on exit
unset tmpdir
trap '[ -n "$tmpdir" ] && rm -rf "$tmpdir"' EXIT
: ${TMPDIR:=/tmp}
tmpdir=$(mktemp -d ${TMPDIR%/}/git-raw.XXXXXX)

# save current working directory
topdir=$(pwd)

# define common functions
test_begin ()
{
    exec 3>&1 4>&2 1>>"$1" 2>&1

    if [[ $# -gt 1 ]]; then
        echo "=== $2 ==="
    fi

    set -x
}

expect_fail ()
{
    set +x
    exec 1>&3 2>&4

    if [[ $1 -ne 0 ]]; then
        echo -n "."
        return 0
    else
        echo -n "!"
        return 1
    fi
}

expect_success ()
{
    set +x
    exec 1>&3 2>&4

    if [[ $1 -eq 0 ]]; then
        echo -n "."
        return 0
    else
        echo -n "!"
        return 1
    fi
}

# run some tests
export PATH="$(pwd):$PATH"
export tmpdir logdir topdir
export -f test_begin expect_fail expect_success
cd "$tmpdir"

set +e
fails=0
bash "$topdir/test/tests/test_init.sh" || fails=$((fails + 1))

if [[ $fails -eq 0 ]]; then
    echo "all tests passed"
    exit 0
elif [[ $fails -eq 1 ]]; then
    echo "1 test failed"
    echo "see log files for details"
    exit 1
else
    echo "$fails tests failed"
    echo "see log files for details"
    exit 1
fi
